{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Target Filter Uniforms",
    "description": "",
    "type": "object",
    "properties": {
        "common_target_filters": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "target_filter": {
                        "$ref": "#/$defs/target_filter"
                    },
                    "target_filter_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "target_filter",
                    "target_filter_id"
                ],
                "unevaluatedProperties": false
            }
        },
        "in_phase_space_mutation": {
            "type": "string"
        },
        "torpedo_target_filter": {
            "type": "object",
            "properties": {
                "constraints": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "constraint_type": {
                                "type": "string",
                                "enum": [
                                    "has_definition",
                                    "has_ability",
                                    "has_adjacent_planet_with_ownership",
                                    "has_antimatter",
                                    "has_buff",
                                    "has_missing_hull",
                                    "has_missing_armor",
                                    "has_missing_shields",
                                    "has_missing_antimatter",
                                    "has_missing_strikecraft",
                                    "has_mutation",
                                    "has_orders",
                                    "has_permission",
                                    "has_recently_been_damaged",
                                    "has_recently_fired_weapon",
                                    "has_build_price",
                                    "has_health",
                                    "has_shields",
                                    "has_weapon",
                                    "has_experience",
                                    "has_planet_type",
                                    "has_ship_role",
                                    "has_unit_level",
                                    "weapon_has_target",
                                    "is_always_a_threat",
                                    "is_bombing_planet",
                                    "is_carrier",
                                    "is_asteroid",
                                    "is_colonizable_planet",
                                    "is_culture_provider",
                                    "is_explored_planet",
                                    "is_fully_built",
                                    "is_home_planet",
                                    "is_unit_factory",
                                    "is_unit_factory_building_units",
                                    "is_structure_with_slot_type",
                                    "is_structure_plate_spin_changing",
                                    "is_building_structures",
                                    "is_detected",
                                    "is_dead_soon",
                                    "is_friendly",
                                    "is_in_fleet",
                                    "is_in_current_gravity_well",
                                    "is_in_dominant_culture",
                                    "is_inner_planet",
                                    "can_ever_hyperspace",
                                    "can_ever_move",
                                    "is_structure_builder",
                                    "not_self",
                                    "composite_not",
                                    "composite_and",
                                    "composite_or"
                                ]
                            }
                        },
                        "required": [
                            "constraint_type"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_definition"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "unit_definition": {
                                            "$ref": "#/$defs/unit_definition_ptr"
                                        }
                                    },
                                    "required": [
                                        "unit_definition"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_ability"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_adjacent_planet_with_ownership"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "max_jump_distance": {
                                            "description": "how many jumps to consider as adjacent. Must be > 0. Default = 1",
                                            "type": "integer",
                                            "minimum": 1
                                        },
                                        "targeter_relationship_type": {
                                            "type": "string",
                                            "enum": [
                                                "self",
                                                "ally",
                                                "enemy",
                                                "none"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "targeter_relationship_type"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_antimatter"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_buff"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "buff": {
                                            "type": "string"
                                        },
                                        "include_pending_buffs": {
                                            "description": "default=false",
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "buff"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_missing_hull"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "amount_missing_threshold": {
                                            "type": "number"
                                        },
                                        "percentage_missing_threshold": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_missing_armor"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "amount_missing_threshold": {
                                            "type": "number"
                                        },
                                        "percentage_missing_threshold": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_missing_shields"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "amount_missing_threshold": {
                                            "type": "number"
                                        },
                                        "percentage_missing_threshold": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_missing_antimatter"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "amount_missing_threshold": {
                                            "type": "number"
                                        },
                                        "percentage_missing_threshold": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_missing_strikecraft"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "amount_missing_threshold": {
                                            "type": "number"
                                        },
                                        "percentage_missing_threshold": {
                                            "type": "number"
                                        },
                                        "strikecraft_kind": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_mutation"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "mutation": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "mutation"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_orders"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_permission"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "permission_type": {
                                            "$ref": "#/$defs/unit_permission_type"
                                        }
                                    },
                                    "required": [
                                        "permission_type"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_recently_been_damaged"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_recently_fired_weapon"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "weapon_type": {
                                            "description": "default=normal",
                                            "$ref": "#/$defs/weapon_type"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_build_price"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_health"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_shields"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_weapon"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "tag": {
                                            "$ref": "#/$defs/weapon_tag"
                                        },
                                        "weapon_type": {
                                            "$ref": "#/$defs/weapon_type"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_experience"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_planet_type"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "planet_types": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/$defs/planet_type"
                                            }
                                        }
                                    },
                                    "required": [
                                        "planet_types"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_ship_role"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "ship_roles": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/$defs/ship_role"
                                            }
                                        }
                                    },
                                    "required": [
                                        "ship_roles"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_unit_level"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "comparison_type": {
                                            "type": "string",
                                            "enum": [
                                                "less_than",
                                                "less_than_equal_to",
                                                "equal_to",
                                                "equal_to_less_one",
                                                "greater_than_equal_to",
                                                "greater_than"
                                            ]
                                        },
                                        "value_source": {
                                            "type": "string",
                                            "enum": [
                                                "constraint_params",
                                                "internal"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "comparison_type",
                                        "value_source"
                                    ],
                                    "if": {
                                        "properties": {
                                            "value_source": {
                                                "const": "internal"
                                            }
                                        }
                                    },
                                    "then": {
                                        "properties": {
                                            "internal_level": {
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "internal_level"
                                        ]
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "weapon_has_target"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "weapon_type": {
                                            "type": "string",
                                            "enum": [
                                                "normal",
                                                "planet_bombing"
                                            ]
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_always_a_threat"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_bombing_planet"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_carrier"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_asteroid"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "asset_type": {
                                            "$ref": "#/$defs/asset_type"
                                        }
                                    },
                                    "required": [
                                        "asset_type"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_colonizable_planet"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "ignore_current_ownership": {
                                            "description": "default=false",
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_culture_provider"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "has_base_culture_rate": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_explored_planet"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_fully_built"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_home_planet"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "targeter_relationship_type": {
                                            "type": "string",
                                            "enum": [
                                                "self",
                                                "ally",
                                                "enemy",
                                                "none"
                                            ]
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_unit_factory"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "must_be_functional": {
                                            "description": "default=false",
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_unit_factory_building_units"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_structure_with_slot_type"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "slot_type": {
                                            "$ref": "#/$defs/structure_slot_type"
                                        }
                                    },
                                    "required": [
                                        "slot_type"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_structure_plate_spin_changing"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_building_structures"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_detected"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_dead_soon"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_friendly"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_in_fleet"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_in_current_gravity_well"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_in_dominant_culture"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "dominant_culture_player_relationship": {
                                            "description": "relationship between targeter player and culture player",
                                            "type": "string",
                                            "enum": [
                                                "self",
                                                "ally",
                                                "enemy",
                                                "none"
                                            ]
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_inner_planet"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "can_ever_hyperspace"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "can_ever_move"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_structure_builder"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "not_self"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "composite_not"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "constraint": {
                                            "$ref": "#/$defs/unit_constraint"
                                        }
                                    },
                                    "required": [
                                        "constraint"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "composite_and"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "constraints": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/$defs/unit_constraint"
                                            },
                                            "minItems": 2,
                                            "maxItems": 5
                                        }
                                    },
                                    "required": [
                                        "constraints"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "composite_or"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "constraints": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/$defs/unit_constraint"
                                            },
                                            "minItems": 2,
                                            "maxItems": 5
                                        }
                                    },
                                    "required": [
                                        "constraints"
                                    ]
                                }
                            }
                        ],
                        "unevaluatedProperties": false
                    }
                },
                "exemptions": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "is_dead",
                            "is_fully_unbuilt",
                            "is_not_explored",
                            "is_in_phase_space"
                        ]
                    }
                },
                "ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "none",
                            "self",
                            "ally",
                            "friendly",
                            "enemy"
                        ]
                    }
                },
                "respect_can_be_targeted_permissions": {
                    "description": "default=true",
                    "type": "boolean"
                },
                "unit_definitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/unit_definition_ptr"
                    }
                },
                "unit_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/target_filter_unit_type"
                    },
                    "maxItems": 18
                }
            },
            "required": [
                "ownerships"
            ],
            "unevaluatedProperties": false
        },
        "version": {
            "type": "integer"
        }
    },
    "required": [
        "common_target_filters",
        "in_phase_space_mutation",
        "torpedo_target_filter"
    ],
    "unevaluatedProperties": false,
    "$defs": {
        "planet_type": {
            "type": "string"
        },
        "asset_type": {
            "type": "string",
            "enum": [
                "credits",
                "metal",
                "crystal"
            ]
        },
        "weapon_tag": {
            "type": "string"
        },
        "planet_type_name": {
            "type": "string"
        },
        "structure_slot_type": {
            "type": "string",
            "enum": [
                "civilian",
                "military"
            ]
        },
        "ship_role": {
            "type": "string",
            "enum": [
                "explore",
                "colonize",
                "attack_ship",
                "anti_structure",
                "bomb_planet",
                "raid"
            ]
        },
        "unit_constraint": {
            "type": "object",
            "properties": {
                "constraint_type": {
                    "type": "string",
                    "enum": [
                        "has_definition",
                        "has_ability",
                        "has_adjacent_planet_with_ownership",
                        "has_antimatter",
                        "has_buff",
                        "has_missing_hull",
                        "has_missing_armor",
                        "has_missing_shields",
                        "has_missing_antimatter",
                        "has_missing_strikecraft",
                        "has_mutation",
                        "has_orders",
                        "has_permission",
                        "has_recently_been_damaged",
                        "has_recently_fired_weapon",
                        "has_build_price",
                        "has_health",
                        "has_shields",
                        "has_weapon",
                        "has_experience",
                        "has_planet_type",
                        "has_ship_role",
                        "has_unit_level",
                        "weapon_has_target",
                        "is_always_a_threat",
                        "is_bombing_planet",
                        "is_carrier",
                        "is_asteroid",
                        "is_colonizable_planet",
                        "is_culture_provider",
                        "is_explored_planet",
                        "is_fully_built",
                        "is_home_planet",
                        "is_unit_factory",
                        "is_unit_factory_building_units",
                        "is_structure_with_slot_type",
                        "is_structure_plate_spin_changing",
                        "is_building_structures",
                        "is_detected",
                        "is_dead_soon",
                        "is_friendly",
                        "is_in_fleet",
                        "is_in_current_gravity_well",
                        "is_in_dominant_culture",
                        "is_inner_planet",
                        "can_ever_hyperspace",
                        "can_ever_move",
                        "is_structure_builder",
                        "not_self",
                        "composite_not",
                        "composite_and",
                        "composite_or"
                    ]
                }
            },
            "required": [
                "constraint_type"
            ],
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_definition"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "unit_definition": {
                                "$ref": "#/$defs/unit_definition_ptr"
                            }
                        },
                        "required": [
                            "unit_definition"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_ability"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_adjacent_planet_with_ownership"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "max_jump_distance": {
                                "description": "how many jumps to consider as adjacent. Must be > 0. Default = 1",
                                "type": "integer",
                                "minimum": 1
                            },
                            "targeter_relationship_type": {
                                "type": "string",
                                "enum": [
                                    "self",
                                    "ally",
                                    "enemy",
                                    "none"
                                ]
                            }
                        },
                        "required": [
                            "targeter_relationship_type"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_antimatter"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_buff"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "buff": {
                                "type": "string"
                            },
                            "include_pending_buffs": {
                                "description": "default=false",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "buff"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_missing_hull"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "amount_missing_threshold": {
                                "type": "number"
                            },
                            "percentage_missing_threshold": {
                                "type": "number"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_missing_armor"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "amount_missing_threshold": {
                                "type": "number"
                            },
                            "percentage_missing_threshold": {
                                "type": "number"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_missing_shields"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "amount_missing_threshold": {
                                "type": "number"
                            },
                            "percentage_missing_threshold": {
                                "type": "number"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_missing_antimatter"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "amount_missing_threshold": {
                                "type": "number"
                            },
                            "percentage_missing_threshold": {
                                "type": "number"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_missing_strikecraft"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "amount_missing_threshold": {
                                "type": "number"
                            },
                            "percentage_missing_threshold": {
                                "type": "number"
                            },
                            "strikecraft_kind": {
                                "type": "string"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_mutation"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "mutation": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "mutation"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_orders"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_permission"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "permission_type": {
                                "$ref": "#/$defs/unit_permission_type"
                            }
                        },
                        "required": [
                            "permission_type"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_recently_been_damaged"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_recently_fired_weapon"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "weapon_type": {
                                "description": "default=normal",
                                "$ref": "#/$defs/weapon_type"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_build_price"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_health"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_shields"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_weapon"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "tag": {
                                "$ref": "#/$defs/weapon_tag"
                            },
                            "weapon_type": {
                                "$ref": "#/$defs/weapon_type"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_experience"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_planet_type"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "planet_types": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/$defs/planet_type"
                                }
                            }
                        },
                        "required": [
                            "planet_types"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_ship_role"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "ship_roles": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/$defs/ship_role"
                                }
                            }
                        },
                        "required": [
                            "ship_roles"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "has_unit_level"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "comparison_type": {
                                "type": "string",
                                "enum": [
                                    "less_than",
                                    "less_than_equal_to",
                                    "equal_to",
                                    "equal_to_less_one",
                                    "greater_than_equal_to",
                                    "greater_than"
                                ]
                            },
                            "value_source": {
                                "type": "string",
                                "enum": [
                                    "constraint_params",
                                    "internal"
                                ]
                            }
                        },
                        "required": [
                            "comparison_type",
                            "value_source"
                        ],
                        "if": {
                            "properties": {
                                "value_source": {
                                    "const": "internal"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "internal_level": {
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "internal_level"
                            ]
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "weapon_has_target"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "weapon_type": {
                                "type": "string",
                                "enum": [
                                    "normal",
                                    "planet_bombing"
                                ]
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_always_a_threat"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_bombing_planet"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_carrier"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_asteroid"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "asset_type": {
                                "$ref": "#/$defs/asset_type"
                            }
                        },
                        "required": [
                            "asset_type"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_colonizable_planet"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "ignore_current_ownership": {
                                "description": "default=false",
                                "type": "boolean"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_culture_provider"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "has_base_culture_rate": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_explored_planet"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_fully_built"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_home_planet"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "targeter_relationship_type": {
                                "type": "string",
                                "enum": [
                                    "self",
                                    "ally",
                                    "enemy",
                                    "none"
                                ]
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_unit_factory"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "must_be_functional": {
                                "description": "default=false",
                                "type": "boolean"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_unit_factory_building_units"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_structure_with_slot_type"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "slot_type": {
                                "$ref": "#/$defs/structure_slot_type"
                            }
                        },
                        "required": [
                            "slot_type"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_structure_plate_spin_changing"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_building_structures"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_detected"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_dead_soon"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_friendly"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_in_fleet"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_in_current_gravity_well"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_in_dominant_culture"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "dominant_culture_player_relationship": {
                                "description": "relationship between targeter player and culture player",
                                "type": "string",
                                "enum": [
                                    "self",
                                    "ally",
                                    "enemy",
                                    "none"
                                ]
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_inner_planet"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "can_ever_hyperspace"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "can_ever_move"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "is_structure_builder"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "not_self"
                            }
                        }
                    },
                    "then": {}
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "composite_not"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "constraint": {
                                "$ref": "#/$defs/unit_constraint"
                            }
                        },
                        "required": [
                            "constraint"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "composite_and"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "constraints": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/$defs/unit_constraint"
                                },
                                "minItems": 2,
                                "maxItems": 5
                            }
                        },
                        "required": [
                            "constraints"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "constraint_type": {
                                "const": "composite_or"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "constraints": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/$defs/unit_constraint"
                                },
                                "minItems": 2,
                                "maxItems": 5
                            }
                        },
                        "required": [
                            "constraints"
                        ]
                    }
                }
            ],
            "unevaluatedProperties": false
        },
        "target_filter": {
            "type": "object",
            "properties": {
                "constraints": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "constraint_type": {
                                "type": "string",
                                "enum": [
                                    "has_definition",
                                    "has_ability",
                                    "has_adjacent_planet_with_ownership",
                                    "has_antimatter",
                                    "has_buff",
                                    "has_missing_hull",
                                    "has_missing_armor",
                                    "has_missing_shields",
                                    "has_missing_antimatter",
                                    "has_missing_strikecraft",
                                    "has_mutation",
                                    "has_orders",
                                    "has_permission",
                                    "has_recently_been_damaged",
                                    "has_recently_fired_weapon",
                                    "has_build_price",
                                    "has_health",
                                    "has_shields",
                                    "has_weapon",
                                    "has_experience",
                                    "has_planet_type",
                                    "has_ship_role",
                                    "has_unit_level",
                                    "weapon_has_target",
                                    "is_always_a_threat",
                                    "is_bombing_planet",
                                    "is_carrier",
                                    "is_asteroid",
                                    "is_colonizable_planet",
                                    "is_culture_provider",
                                    "is_explored_planet",
                                    "is_fully_built",
                                    "is_home_planet",
                                    "is_unit_factory",
                                    "is_unit_factory_building_units",
                                    "is_structure_with_slot_type",
                                    "is_structure_plate_spin_changing",
                                    "is_building_structures",
                                    "is_detected",
                                    "is_dead_soon",
                                    "is_friendly",
                                    "is_in_fleet",
                                    "is_in_current_gravity_well",
                                    "is_in_dominant_culture",
                                    "is_inner_planet",
                                    "can_ever_hyperspace",
                                    "can_ever_move",
                                    "is_structure_builder",
                                    "not_self",
                                    "composite_not",
                                    "composite_and",
                                    "composite_or"
                                ]
                            }
                        },
                        "required": [
                            "constraint_type"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_definition"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "unit_definition": {
                                            "$ref": "#/$defs/unit_definition_ptr"
                                        }
                                    },
                                    "required": [
                                        "unit_definition"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_ability"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_adjacent_planet_with_ownership"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "max_jump_distance": {
                                            "description": "how many jumps to consider as adjacent. Must be > 0. Default = 1",
                                            "type": "integer",
                                            "minimum": 1
                                        },
                                        "targeter_relationship_type": {
                                            "type": "string",
                                            "enum": [
                                                "self",
                                                "ally",
                                                "enemy",
                                                "none"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "targeter_relationship_type"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_antimatter"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_buff"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "buff": {
                                            "type": "string"
                                        },
                                        "include_pending_buffs": {
                                            "description": "default=false",
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "buff"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_missing_hull"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "amount_missing_threshold": {
                                            "type": "number"
                                        },
                                        "percentage_missing_threshold": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_missing_armor"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "amount_missing_threshold": {
                                            "type": "number"
                                        },
                                        "percentage_missing_threshold": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_missing_shields"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "amount_missing_threshold": {
                                            "type": "number"
                                        },
                                        "percentage_missing_threshold": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_missing_antimatter"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "amount_missing_threshold": {
                                            "type": "number"
                                        },
                                        "percentage_missing_threshold": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_missing_strikecraft"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "amount_missing_threshold": {
                                            "type": "number"
                                        },
                                        "percentage_missing_threshold": {
                                            "type": "number"
                                        },
                                        "strikecraft_kind": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_mutation"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "mutation": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "mutation"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_orders"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_permission"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "permission_type": {
                                            "$ref": "#/$defs/unit_permission_type"
                                        }
                                    },
                                    "required": [
                                        "permission_type"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_recently_been_damaged"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_recently_fired_weapon"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "weapon_type": {
                                            "description": "default=normal",
                                            "$ref": "#/$defs/weapon_type"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_build_price"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_health"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_shields"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_weapon"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "tag": {
                                            "$ref": "#/$defs/weapon_tag"
                                        },
                                        "weapon_type": {
                                            "$ref": "#/$defs/weapon_type"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_experience"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_planet_type"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "planet_types": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/$defs/planet_type"
                                            }
                                        }
                                    },
                                    "required": [
                                        "planet_types"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_ship_role"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "ship_roles": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/$defs/ship_role"
                                            }
                                        }
                                    },
                                    "required": [
                                        "ship_roles"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "has_unit_level"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "comparison_type": {
                                            "type": "string",
                                            "enum": [
                                                "less_than",
                                                "less_than_equal_to",
                                                "equal_to",
                                                "equal_to_less_one",
                                                "greater_than_equal_to",
                                                "greater_than"
                                            ]
                                        },
                                        "value_source": {
                                            "type": "string",
                                            "enum": [
                                                "constraint_params",
                                                "internal"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "comparison_type",
                                        "value_source"
                                    ],
                                    "if": {
                                        "properties": {
                                            "value_source": {
                                                "const": "internal"
                                            }
                                        }
                                    },
                                    "then": {
                                        "properties": {
                                            "internal_level": {
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "internal_level"
                                        ]
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "weapon_has_target"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "weapon_type": {
                                            "type": "string",
                                            "enum": [
                                                "normal",
                                                "planet_bombing"
                                            ]
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_always_a_threat"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_bombing_planet"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_carrier"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_asteroid"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "asset_type": {
                                            "$ref": "#/$defs/asset_type"
                                        }
                                    },
                                    "required": [
                                        "asset_type"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_colonizable_planet"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "ignore_current_ownership": {
                                            "description": "default=false",
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_culture_provider"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "has_base_culture_rate": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_explored_planet"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_fully_built"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_home_planet"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "targeter_relationship_type": {
                                            "type": "string",
                                            "enum": [
                                                "self",
                                                "ally",
                                                "enemy",
                                                "none"
                                            ]
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_unit_factory"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "must_be_functional": {
                                            "description": "default=false",
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_unit_factory_building_units"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_structure_with_slot_type"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "slot_type": {
                                            "$ref": "#/$defs/structure_slot_type"
                                        }
                                    },
                                    "required": [
                                        "slot_type"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_structure_plate_spin_changing"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_building_structures"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_detected"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_dead_soon"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_friendly"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_in_fleet"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_in_current_gravity_well"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_in_dominant_culture"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "dominant_culture_player_relationship": {
                                            "description": "relationship between targeter player and culture player",
                                            "type": "string",
                                            "enum": [
                                                "self",
                                                "ally",
                                                "enemy",
                                                "none"
                                            ]
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_inner_planet"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "can_ever_hyperspace"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "can_ever_move"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "is_structure_builder"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "not_self"
                                        }
                                    }
                                },
                                "then": {}
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "composite_not"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "constraint": {
                                            "$ref": "#/$defs/unit_constraint"
                                        }
                                    },
                                    "required": [
                                        "constraint"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "composite_and"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "constraints": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/$defs/unit_constraint"
                                            },
                                            "minItems": 2,
                                            "maxItems": 5
                                        }
                                    },
                                    "required": [
                                        "constraints"
                                    ]
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "constraint_type": {
                                            "const": "composite_or"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "constraints": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/$defs/unit_constraint"
                                            },
                                            "minItems": 2,
                                            "maxItems": 5
                                        }
                                    },
                                    "required": [
                                        "constraints"
                                    ]
                                }
                            }
                        ],
                        "unevaluatedProperties": false
                    }
                },
                "exemptions": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "is_dead",
                            "is_fully_unbuilt",
                            "is_not_explored",
                            "is_in_phase_space"
                        ]
                    }
                },
                "ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "none",
                            "self",
                            "ally",
                            "friendly",
                            "enemy"
                        ]
                    }
                },
                "respect_can_be_targeted_permissions": {
                    "description": "default=true",
                    "type": "boolean"
                },
                "unit_definitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/unit_definition_ptr"
                    }
                },
                "unit_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/target_filter_unit_type"
                    },
                    "maxItems": 18
                }
            },
            "required": [
                "ownerships"
            ],
            "unevaluatedProperties": false
        },
        "target_filter_unit_type": {
            "type": "string",
            "enum": [
                "strikecraft",
                "corvette",
                "frigate",
                "cruiser",
                "capital_ship",
                "titan",
                "structure",
                "starbase",
                "planet",
                "star",
                "gravity_well",
                "phase_lane",
                "asteroid",
                "torpedo",
                "cannon_shell",
                "loot",
                "debris",
                "untargetable"
            ]
        },
        "unit_definition_ptr": {
            "type": "string"
        },
        "unit_permission_type": {
            "type": "string",
            "enum": [
                "can_hyperspace",
                "can_be_targeted_by_allies",
                "can_be_targeted_by_enemies",
                "can_be_damaged",
                "can_planet_be_damaged",
                "can_have_hull_restored",
                "can_have_armor_restored",
                "can_have_shields_restored",
                "can_have_shields_burst_restored",
                "can_have_shields_bypassed",
                "can_passively_regenerate_hull",
                "can_passively_regenerate_armor",
                "can_passively_regenerate_shields",
                "can_update_build_progress",
                "can_use_weapons",
                "can_use_weapons_when_crippled",
                "can_use_active_abilities",
                "can_use_abilities_when_crippled",
                "can_be_colonized",
                "can_launch_or_dock_strikecraft",
                "can_update_unit_production",
                "can_create_retargeting_torpedoes"
            ]
        },
        "weapon_type": {
            "type": "string",
            "enum": [
                "normal",
                "planet_bombing"
            ]
        }
    }
}